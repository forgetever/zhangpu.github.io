<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>听城</title>
  <subtitle>Life is too short to be ordinary</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhangpu1211.github.io/"/>
  <updated>2017-08-27T02:24:59.696Z</updated>
  <id>https://zhangpu1211.github.io/</id>
  
  <author>
    <name>听城</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>maven安装与aliyun仓库配置</title>
    <link href="https://zhangpu1211.github.io/2017/08/27/maven%E5%AE%89%E8%A3%85%E4%B8%8Ealiyun%E4%BB%93%E5%BA%93%E9%85%8D%E7%BD%AE/"/>
    <id>https://zhangpu1211.github.io/2017/08/27/maven安装与aliyun仓库配置/</id>
    <published>2017-08-27T02:23:24.000Z</published>
    <updated>2017-08-27T02:24:59.696Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>MAVEN项目对象模型(POM)，可以通过一小段描述信息来管理项目的构建，报告和文档的软件项目管理工具。Maven 除了以程序构建能力为特色之外，还提供高级项目管理工具。由于 Maven 的缺省构建规则有较高的可重用性，所以常常用两三行 Maven 构建脚本就可以构建简单的项目。由于 Maven 的面向项目的方法，许多 Apache Jakarta 项目发文时使用 Maven，而且公司项目采用 Maven 的比例在持续增长。</p>
<p>###下载<br><a href="http://maven.apache.org/download.cgi" target="_blank" rel="external">下载地址</a>,选择对应操作系统版本，linux就是第一个啦，win就是第二个。</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/2065390-e9d2ce84ac64fde2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"><br>linux解压命令<code>tar xzvf apache-maven-3.5.0-bin.tar.gz</code><br>window直接解压到你想要的目录即可</p>
<p>###安装<br>让我们看看官方文档怎么说<br>Alternatively use your preferred archive extraction tool.</p>
<ul>
<li>Add the bin directory of the created directory apache-maven-3.5.0 to the PATH environment variable</li>
<li>Confirm with mvn -v in a new shell. The result should look similar to<br>简单来说就是讲路径添加到系统的环境变量中，然后用<code>mvn -v</code>来检测是否成功。在此我们默认各位的java环境已经配置成功！<br>windows:在path下添加<code>C:\Program Files\apache-maven-3.5.0\bin</code><br>linux下添加环境变量方法:<code>export PATH=/opt/apache-maven-3.5.0/bin:$PATH</code><br>可选配置：<br>MAVEN_OPTS环境变量：<br>该变量包含用于启动运行Maven的JVM的参数，可用于向Maven提供其他选项。可以使用值-Xms256m -Xmx512m定义JVM内存设置<br>###添加阿里云镜像和修改本地仓库位置<br>打开maven文件夹下conf/setting.xml，查找<strong><em>mirror</em></strong>和<strong><em>localRepository</em></strong>关键字,将以下代码复制到对应位置。最后复制一份setting.xml到你新修改的本地仓库<code>E:\repository</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;mirrors&gt;</div><div class="line">  	&lt;mirror&gt;</div><div class="line">        &lt;id&gt;nexus-aliyun&lt;/id&gt;</div><div class="line">        &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;</div><div class="line">        &lt;name&gt;Nexus aliyun&lt;/name&gt;</div><div class="line">        &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</div><div class="line">    &lt;/mirror&gt; </div><div class="line">&lt;/mirrors&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p><code>&lt;localRepository&gt;E:\repository&lt;/localRepository&gt;</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;MAVEN项目对象模型(POM)，可以通过一小段描述信息来管理项目的构建，报告和文档的软件项目管理工具。Maven 除了以程序构建能力为特色之外，还提供高级项目管理工具。由于 Maven 的缺省构建规则有较高的可重用性，所以常常用两三行 Maven
    
    </summary>
    
      <category term="编程" scheme="https://zhangpu1211.github.io/categories/program/"/>
    
    
      <category term="java" scheme="https://zhangpu1211.github.io/tags/java/"/>
    
      <category term="maven" scheme="https://zhangpu1211.github.io/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>vscode中使用git</title>
    <link href="https://zhangpu1211.github.io/2017/08/24/vscode%E4%B8%AD%E4%BD%BF%E7%94%A8git/"/>
    <id>https://zhangpu1211.github.io/2017/08/24/vscode中使用git/</id>
    <published>2017-08-24T10:36:12.000Z</published>
    <updated>2017-08-24T10:51:46.205Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>vscode简介</em></strong><br>VSCode是微软推出的一款轻量编辑器，采取了和VS相同的UI界面，搭配合适的插件可以优化前端开发的体验。<br>布局：左侧是用于展示所要编辑的所有文件和文件夹的文件管理器，依次是<strong>资源管理器</strong>，<strong>搜索</strong>，<strong>GIT</strong>，<strong>调试</strong>，<strong>插件</strong>，右侧是打开文件的编辑区域，最多可同时打开三个编辑区域到侧边。在初次使用时如果本地没有安装git会提示先安装git，然后重启vscode。</p>
<p><strong><em>git下载地址</em></strong><br><strong><em><a href="https://git-scm.com/download/win" target="_blank" rel="external">Downloading Git</a></em></strong><br><em>如果安装过程提示无法添加环境变量到path中，则需要将git安装目录下的cmd目录添加到系统的path变量下</em></p>
<p><strong><em>配置git</em></strong></p>
<ul>
<li><p>设置全局配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.name &quot;your name&quot; </div><div class="line">git config --global user.email &quot;your email&quot;</div></pre></td></tr></table></figure>
</li>
<li><p>进入你的项目目录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">cd d:/wamp/www/wap              //首先指定到你的项目目录下</div><div class="line">git init</div><div class="line">touch README.md</div><div class="line">git add README.md</div><div class="line">git commit -m &quot;first commit&quot;</div><div class="line">git remote add origin https://github.com/youtname/vscode.git   </div><div class="line">//用你仓库的url,vscode.git中vscode为仓库名称,使用时必须先创建</div><div class="line">git push -u origin master  //提交到你的仓库</div></pre></td></tr></table></figure>
</li>
</ul>
<p><strong><em>正式使用</em></strong></p>
<ul>
<li><p>提交代码到git<br>回到vs code打开git工作区就会看到所有代码显示在这里<br><img src="http://upload-images.jianshu.io/upload_images/2065390-a262f07bfbd6248a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>点击+号，把所有文件提交到暂存区。<br>然后打开菜单选择–提交已暂存的<br><img src="http://upload-images.jianshu.io/upload_images/2065390-d29fcbab73a224b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>然后按提示随便在消息框里输入一个消息，再按ctrl+enter提交<br><img src="http://upload-images.jianshu.io/upload_images/2065390-2a14bac73c66427b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>然后把所有暂存的代码push云端，<br><img src="http://upload-images.jianshu.io/upload_images/2065390-3e8449a7a0936e07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>点击后，会弹出让你输入账号密码，把你托管平台的账号密码输入上去就行了<br>不出问题的话你整个项目就会提交到云端上了。<br>在vs中每次更新代码都会要输入账号密码，方便起见，可以配置一下让GIT记住密码账号。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git config --global credential.helper store   //在Git Bash输入这个命令就可以了</div></pre></td></tr></table></figure>
</li>
<li><p>同步代码<br><strong>这里说下平时修改代码后提交到云端的使用，和本地代码和云端同步</strong><br>　　随便打开一个文件，添加一个注释<br><img src="http://upload-images.jianshu.io/upload_images/2065390-0c48e7a94592d088.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>可以看到git图标有一个提示，打开git工作区可以看到就是修改的这个文件<br><img src="http://upload-images.jianshu.io/upload_images/2065390-9f771ddc6682827b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>然后点击右侧的+号，把他暂存起来。<br>再在消息框里输入消息，按ctrl+enter提交暂存<br><img src="http://upload-images.jianshu.io/upload_images/2065390-1131357d55addbd4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>再点击push提交，代码就提交到云端了。<br><img src="http://upload-images.jianshu.io/upload_images/2065390-d9d53c0c5a426050.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>打开 码云就可以看到了。。<br><img src="http://upload-images.jianshu.io/upload_images/2065390-3834f1650889eccf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
</li>
<li>更新回本地<br>比如当你在家里修改了代码提交到云端后，回到公司只需要用vscode打开项目点击菜单中的pull就可以同步过来了。</li>
<li>克隆项目<br>打开Git Bash输入以下命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd d:/project   //指定存放的目录</div><div class="line">git clone https://github.com/youtname/your repository.git     //你的仓库地址</div></pre></td></tr></table></figure></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;&lt;em&gt;vscode简介&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;VSCode是微软推出的一款轻量编辑器，采取了和VS相同的UI界面，搭配合适的插件可以优化前端开发的体验。&lt;br&gt;布局：左侧是用于展示所要编辑的所有文件和文件夹的文件管理器，依次是&lt;strong&gt;资
    
    </summary>
    
      <category term="工具" scheme="https://zhangpu1211.github.io/categories/tools/"/>
    
    
      <category term="vs" scheme="https://zhangpu1211.github.io/tags/vs/"/>
    
      <category term="git" scheme="https://zhangpu1211.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://zhangpu1211.github.io/2017/08/24/hello-world/"/>
    <id>https://zhangpu1211.github.io/2017/08/24/hello-world/</id>
    <published>2017-08-24T02:36:47.025Z</published>
    <updated>2017-08-24T02:36:47.025Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
